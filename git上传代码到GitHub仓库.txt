git 上传代码到GitHub仓库

1，初始化
git init


2，从远程仓库拉取最新的更改并合并到当前分支
git pull git@github.com:s22ss/test.git

拉取GitHub仓库文件
git clone -b master git@github.com:s22ss/test.git
(https://github.com/s22ss/test.git/git@github.com:s22ss/test.git仓库地址)
（- b master具体分支的文件)

3，添加到暂存区
git add . 命令用于将当前目录下的所有变更（包括新添加的文件和已修改的文件）添加到 Git 的暂存区，以备后续提交。
执行 git add . 命令后，Git 将会扫描当前目录及其子目录下的所有文件，并将它们添加到暂存区。这意味着 Git 将跟踪这些文件的变化，并在你执行提交操作时将它们包含在提交中。
请注意，git add . 命令会将当前目录及其子目录中的所有文件添加到暂存区，包括未跟踪的文件。如果你只想将已修改的文件添加到暂存区，而不包括新添加的文件或未跟踪的文件，可以使用 git add -u 命令。
执行 git add . 或 git add -u 后，你可以使用 git status 命令来查看暂存区的状态，确认被添加的文件是否正确。
记住，在执行提交之前，你可能还需要执行 git commit 命令将暂存区中的变更提交到本地仓库

4，提交操作
git commit -m “RegionCLIP” 是提交操作的命令，它会将你暂存区中的变更提交到本地仓库，并为提交添加一个描述性的提交信息。
执行该命令时，请确保已经在执行 git add 命令将需要提交的文件添加到暂存区。
解释一下该命令的各个部分：
git commit：表示提交操作。
-m “RegionCLIP”：使用 -m 参数后面跟随的双引号内的内容作为提交的描述信息。你可以根据实际情况将 “RegionCLIP” 替换为更具体的提交信息，以便描述本次提交的内容。
执行 git commit -m “RegionCLIP” 命令后，Git 会将暂存区的变更提交到本地仓库，并为该提交赋予指定的提交信息

 5，将一个远程仓库添加为 Git 仓库的远程别名
git remote add origin git@github.com:s22ss/test.git 是将一个远程仓库添加为 Git 仓库的远程别名（remote alias）。使用这个命令可以将名为 origin 的远程别名与远程仓库的 URL git@github.com:biluko/RegionCLIP.git 相关联。

解释一下该命令的各个部分：

git remote add：表示添加远程别名的操作。
origin：是你为远程仓库起的一个别名，你可以根据需要选择一个有意义的名称。通常情况下，我们使用 origin 作为默认的远程仓库别名。
git@github.com:biluko/RegionCLIP.git：是远程仓库的 SSH URL。
通过执行 git remote add origin git@github.com:biluko/RegionCLIP.git 命令，你将在你的本地 Git 仓库中添加了一个名为 origin 的远程别名，该别名与指定的远程仓库的 URL 相关联。

添加远程别名后，你可以使用 origin 别名来指代该远程仓库，方便进行推送、拉取等与远程仓库的交互操作。例如，你可以使用 git push origin <branch> 将本地分支推送到 origin 远程仓库。


6，推送到远程仓库
git push origin master 是将本地的 master 分支推送到名为 origin 的远程仓库的命令。

解释一下该命令的各个部分：

git push：表示推送操作。
origin：是你为远程仓库起的一个别名，用于指代远程仓库的 URL。在执行 git remote add 命令时，我们通常将远程仓库的别名设置为 origin。
master：表示要推送的本地分支名称。在这种情况下，你将推送本地的 master 分支到远程仓库。
通过执行 git push origin master 命令，Git 将会将本地的 master 分支上的提交推送到名为 origin 的远程仓库。






